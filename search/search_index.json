{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Our Motive \u00b6 We were the first ones who recognised the need of mobile coding At MCH, we aspire to make the masses aware about the possibilities of mobile coding. May it be your phone, tablet or browser on a toaster We are trying our best to keep the website free of any advertisement to give the best experience to the users. You are welcome to give any suggestions or opinions on our Discord Server . Have a happy stay ! Yes, the toasters do exist! Don't know how mobile they are! Pros and Cons of Mobile Coding \u00b6 Just like any other thing, Mobile Coding has its own features and its own set of problems. We won't just let you dive into this world without you know everything(or most of the stuff) about it Pros \u00b6 Best alternative for those who don't already have a PC or have a really old one Best for prototyping More utility out of a product you already have Portability - Code Anywhere, Take it with you anywhere! Fix bugs on the fly Get notifications directly Easier to run scripts in background Better for people who don't want to buy a raspberry pie or host a VPS(Though we will teach you how you can do this as well) Cons \u00b6 Can lead to device overheating !!! note Though if you can run games in high quality then it shouldn't be a problem Mobile Data Charges usually very high in some countries Restrictions on Battery Life Less Upgradability > The most you can easily do is to increase the storage space Less efficient if you can type on a keyboard with >55-60wpm Mobile Phone aren't meant to run background tasks at full efficiency. Running script in foreground for too long can result in reduced display life About the Author AXVin is a self taught software developer, proficient in Python! \u00b6","title":"Home"},{"location":"#our-motive","text":"We were the first ones who recognised the need of mobile coding At MCH, we aspire to make the masses aware about the possibilities of mobile coding. May it be your phone, tablet or browser on a toaster We are trying our best to keep the website free of any advertisement to give the best experience to the users. You are welcome to give any suggestions or opinions on our Discord Server . Have a happy stay ! Yes, the toasters do exist! Don't know how mobile they are!","title":"Our Motive"},{"location":"#pros-and-cons-of-mobile-coding","text":"Just like any other thing, Mobile Coding has its own features and its own set of problems. We won't just let you dive into this world without you know everything(or most of the stuff) about it","title":"Pros and Cons of Mobile Coding"},{"location":"#pros","text":"Best alternative for those who don't already have a PC or have a really old one Best for prototyping More utility out of a product you already have Portability - Code Anywhere, Take it with you anywhere! Fix bugs on the fly Get notifications directly Easier to run scripts in background Better for people who don't want to buy a raspberry pie or host a VPS(Though we will teach you how you can do this as well)","title":"Pros"},{"location":"#cons","text":"Can lead to device overheating !!! note Though if you can run games in high quality then it shouldn't be a problem Mobile Data Charges usually very high in some countries Restrictions on Battery Life Less Upgradability > The most you can easily do is to increase the storage space Less efficient if you can type on a keyboard with >55-60wpm Mobile Phone aren't meant to run background tasks at full efficiency. Running script in foreground for too long can result in reduced display life About the Author","title":"Cons"},{"location":"#axvin-is-a-self-taught-software-developer-proficient-in-python","text":"","title":"AXVin is a self taught software developer, proficient in Python!"},{"location":"started/","text":"Getting Started \u00b6 The first thing you need is a device which is portable enough! A laptop comes under the category of a PC so it is out of our scope. Things you need: \u00b6 Pre-requisites \u00b6 An Android Device [Possibly with Android version 5.0 or above] Any Browser An App Store/Play Store For the purpose of this guide, we will be using: An Android 5.0 device Google Chrome as the broswer Play Store as our App Store Scripting App \u00b6 First of all we need some place where we can run our scripts. It won't be fun without that, will it? There are several options for this: Termux [Requires Android 5.0 or above] Debian NoRoot PyDroid [Only for Python scripts] SL4A and many more ... For the purpose of this guide, we will mostly be using: Termux - Because of it's light weight, reliablilty and sleek design! Writing Code \u00b6 Then you need some tool where you can write code! You can write in your termminal or some application. For terminal, you can use: Nano Vim Emacs etc, For apps, there are some really good tools: DroidEdit PyDroid [Only for Python scripts] etc,. For the purpose of this guide, we will be using: DroidEdit","title":"Getting Started"},{"location":"started/#getting-started","text":"The first thing you need is a device which is portable enough! A laptop comes under the category of a PC so it is out of our scope.","title":"Getting Started"},{"location":"started/#things-you-need","text":"","title":"Things you need:"},{"location":"started/#pre-requisites","text":"An Android Device [Possibly with Android version 5.0 or above] Any Browser An App Store/Play Store For the purpose of this guide, we will be using: An Android 5.0 device Google Chrome as the broswer Play Store as our App Store","title":"Pre-requisites"},{"location":"started/#scripting-app","text":"First of all we need some place where we can run our scripts. It won't be fun without that, will it? There are several options for this: Termux [Requires Android 5.0 or above] Debian NoRoot PyDroid [Only for Python scripts] SL4A and many more ... For the purpose of this guide, we will mostly be using: Termux - Because of it's light weight, reliablilty and sleek design!","title":"Scripting App"},{"location":"started/#writing-code","text":"Then you need some tool where you can write code! You can write in your termminal or some application. For terminal, you can use: Nano Vim Emacs etc, For apps, there are some really good tools: DroidEdit PyDroid [Only for Python scripts] etc,. For the purpose of this guide, we will be using: DroidEdit","title":"Writing Code"},{"location":"support/","text":"Join our Discord Server \u00b6","title":"Help & Support"},{"location":"support/#join-our-discord-server","text":"","title":"Join our Discord Server"},{"location":"termux/","text":"Termux is a terminal emulator which provides a linux-like environment of for your Android Device! Termux combines powerful terminal emulation with an extensive Linux package collection. Features \u00b6 Enjoy the bash and zsh shells. Edit files with nano and vim. Access servers over ssh. Develop in C with clang, make and gdb. Use the python console as a pocket calculator. Check out projects with git and subversion. Run text-based games with frotz. Run linux images with proot Packages \u00b6 Termux comes with it's own package manager called pkg (can also be referenced with normal apt ). So to install some package you do $ pkg install package-name and it will automatically run apt update before installing and then installs the package from it's vast repository which includes Python, Nodejs, PostgreSQL, Redis, etc. Want to read the wiki? Click here Need help? Check out #termux channel on our Discord Server ! \u00b6","title":"Termux"},{"location":"termux/#features","text":"Enjoy the bash and zsh shells. Edit files with nano and vim. Access servers over ssh. Develop in C with clang, make and gdb. Use the python console as a pocket calculator. Check out projects with git and subversion. Run text-based games with frotz. Run linux images with proot","title":"Features"},{"location":"termux/#packages","text":"Termux comes with it's own package manager called pkg (can also be referenced with normal apt ). So to install some package you do $ pkg install package-name and it will automatically run apt update before installing and then installs the package from it's vast repository which includes Python, Nodejs, PostgreSQL, Redis, etc. Want to read the wiki? Click here","title":"Packages"},{"location":"termux/#need-help-check-out-termux-channel-on-our-discord-server","text":"","title":"Need help? Check out #termux channel on our Discord Server!"},{"location":"termux/installation/","text":"Open Play Store and search for Termux \u00b6 Or click here Error: Your device isn't compatible with this version If you get the above error then that means your Android version is lower than 5.0. Either update it or choose one of the alternates(Guides for whom are coming soon!) Click on the Install button \u00b6 The App is just 150-200kbs so it shouldn't take much time! This is how it should look after installing","title":"Installation"},{"location":"termux/installation/#open-play-store-and-search-for-termux","text":"Or click here Error: Your device isn't compatible with this version If you get the above error then that means your Android version is lower than 5.0. Either update it or choose one of the alternates(Guides for whom are coming soon!)","title":"Open Play Store and search for Termux"},{"location":"termux/installation/#click-on-the-install-button","text":"The App is just 150-200kbs so it shouldn't take much time! This is how it should look after installing","title":"Click on the Install button"},{"location":"termux/python/","text":"Warning Must have Termux installed! Click here if you want to check out our guide on how to install it!","title":"Python"},{"location":"termux/customisation/","text":"Termux has a lot of customisability. You can edit the behaviour of the touch keyboard, volume keys and various panels. Creating new sessions and terminals is even easier. Open Termux \u00b6 Navigate to the Termux app on your Android Device. Open the app Excessive Loading? If you are opening the app for the first time then it may take some time for it to load all the dependencies required for the app! The app should look something like this when it loads Adding Custom Configurations \u00b6 You can easily change the behaviour of the termux application by defining properties for it in a key=value style method. For doing that, you first need to create a directory 1 named .termux Example $ mkdir $HOME /.termux Did you know? On OS X machines, the files which start with . are hidden. These aren't shown when you type in ls . To show these files you have to use the -a flag Example The directory and files are just for an example The . represents the current working directory. The .. represents the parent directory ~/ represent the home directory. If you are ever lost, just type in cd ~/ and you will be at the home directory. You can also do cd $HOME/ for the same. After doing this, you need to create a file named termux.properties in ~/.termux directory. You can do this with the following command: Example $ touch termux.properties Writing the configurations \u00b6 You need a command line tool to write on files directory, if you don't have root access (assuming most of you don't). You can use nano , vim , emacs , etc. for this. For the sake of this guide, we will be using nano because of simplicity! Install nano \u00b6 $ pkg install nano This should install the latest version of nano on your device. Opening the file in nano \u00b6 To open a file, you just do nano <filename> . Nano will create the file if it doesn't exist and if it does; then just opens it Example $ nano ~/.termux/termux.properties It should look something like this: Adding configurations \u00b6 Termux Shortcuts Adding Extra Keys In computer language, folders are called directories. \u21a9","title":"Introduction"},{"location":"termux/customisation/#open-termux","text":"Navigate to the Termux app on your Android Device. Open the app Excessive Loading? If you are opening the app for the first time then it may take some time for it to load all the dependencies required for the app! The app should look something like this when it loads","title":"Open Termux"},{"location":"termux/customisation/#adding-custom-configurations","text":"You can easily change the behaviour of the termux application by defining properties for it in a key=value style method. For doing that, you first need to create a directory 1 named .termux Example $ mkdir $HOME /.termux Did you know? On OS X machines, the files which start with . are hidden. These aren't shown when you type in ls . To show these files you have to use the -a flag Example The directory and files are just for an example The . represents the current working directory. The .. represents the parent directory ~/ represent the home directory. If you are ever lost, just type in cd ~/ and you will be at the home directory. You can also do cd $HOME/ for the same. After doing this, you need to create a file named termux.properties in ~/.termux directory. You can do this with the following command: Example $ touch termux.properties","title":"Adding Custom Configurations"},{"location":"termux/customisation/#writing-the-configurations","text":"You need a command line tool to write on files directory, if you don't have root access (assuming most of you don't). You can use nano , vim , emacs , etc. for this. For the sake of this guide, we will be using nano because of simplicity!","title":"Writing the configurations"},{"location":"termux/customisation/#install-nano","text":"$ pkg install nano This should install the latest version of nano on your device.","title":"Install nano"},{"location":"termux/customisation/#opening-the-file-in-nano","text":"To open a file, you just do nano <filename> . Nano will create the file if it doesn't exist and if it does; then just opens it Example $ nano ~/.termux/termux.properties It should look something like this:","title":"Opening the file in nano"},{"location":"termux/customisation/#adding-configurations","text":"Termux Shortcuts Adding Extra Keys In computer language, folders are called directories. \u21a9","title":"Adding configurations"},{"location":"termux/customisation/extra_keys/","text":"Understanding Keys on Termux and Shortcuts \u00b6 You might have noticed that the keyboard at the bottom of the screen has some pretty useful keys by default! These are ESC , TAB , CTRL , ALT , - , DOWN and UP . But you can always edit these if you want to! Use of keys like ALT , CTRL , ESC is necessary for working with a CLI terminal. Termux touch keyboards do not include one. For that purpose Termux uses the Volume down button to emulate the CTRL key. For example, pressing VOLUME DOWN+L on a touch keyboard sends the same input as pressing Ctrl+L on a hardware keyboard. The result of using CTRL in combination with a key depends on which program is used, but for many command line tools the following shortcuts works: CTRL+A \u2192 Move cursor to the beginning of line CTRL+C \u2192 Abort (send SIGINT to) current process CTRL+D \u2192 Logout of a terminal session CTRL+E \u2192 Move cursor to the end of line CTRL+K \u2192 Delete from cursor to the end of line CTRL+L \u2192 Clear the terminal CTRL+Z \u2192 Suspend (send SIGTSTP to) current process CTRL+ALT+C \u2192 Open new session (only work in Hacker's Keyboard) The Volume up key also serves as a special key to produce certain input: VOLUME UP+E \u2192 Escape key VOLUME UP+T \u2192 Tab key VOLUME UP+1 \u2192 F1 (and Volume Up+2 \u2192 F2, etc) VOLUME UP+0 \u2192 F10 VOLUME UP+B \u2192 Alt+B, back a word when using readline VOLUME UP+F \u2192 Alt+F, forward a word when using readline VOLUME UP+X \u2192 Alt+X VOLUME UP+W \u2192 Up arrow key VOLUME UP+A \u2192 Left arrow key VOLUME UP+S \u2192 Down arrow key VOLUME UP+D \u2192 Right arrow key VOLUME UP+L \u2192 | (the pipe character) VOLUME UP+H \u2192 ~ (the tilde character) VOLUME UP+U \u2192 _ (underscore) VOLUME UP+P \u2192 Page Up VOLUME UP+N \u2192 Page Down VOLUME UP+. \u2192 Ctrl+ (SIGQUIT) VOLUME UP+V \u2192 Show the volume control VOLUME UP+Q \u2192 Show extra keys view VOLUME UP+K \u2192 Another variant to toggle extra keys view Adding extra keys \u00b6 Termux also has an extra keys view which allows you to extend your current keyboard. To enable the extra keys view you have to long tap on the keyboard button in the left drawer menu. (Swipe from left \u2192 right to open the drawer) Abstract You can also press VOLUME UP+Q or VOLUME UP+K . Note From Termux v0.66, Extra keys are enabled by default. You can remove these by long pressing on the keyboard again Open the termux.properties file: Example $ nano ~/.termux/termux.properties Directory .../home/.termux doesn't exist If you get the above error, then that means that the .termux directory doesn't exist. Try making it, before doing this, with mkdir $HOME /.termux/ Now we will start by adding two rows of some really useful keys(default keys until v0.66) extra-keys = [[ 'ESC' , '/' , '-' , 'HOME' , 'UP' , 'END' , 'PGUP' ] , [ 'TAB' , 'CTRL' , 'ALT' , 'LEFT' , 'DOWN' , 'RIGHT' , 'PGDN' ]] extra-keys is the key and the value is a list(array) of lists with the extra keys! The extra-keys definition itself can also be spread over multiple lines, if desired, by \"backslash-escaping\" the line feed at the end of each line, thus: extra-keys = [ \\ [ 'ESC' , '/' , '-' , 'HOME' , 'UP' , 'END' , 'PGUP' ] , \\ [ 'TAB' , 'CTRL' , 'ALT' , 'LEFT' , 'DOWN' , 'RIGHT' , 'PGDN' ] \\ ] Success It should look something like this: Each key \"entry\" can be either a string (such as '|' , '/' or '=' ) or one of the values listed below. These values are defined in ExtraKeysView.java, and the list of values (not including possible synonyms) is: CTRL (\"special key\") ALT (\"special key\") FN (\"special key\") ESC (\"special key\") TAB HOME END PGUP PGDN INS DEL BKSP UP LEFT RIGHT DOWN ENTER BACKSLASH QUOTE APOSTROPHE Bug Each of the four \"special keys\" listed above should only be listed at most ONCE in the extra-keys definition i.e. do NOT have more than one CTRL key. Having more than one instance of any \"special key\" will result in a bug whereby those keys do not function correctly. Saving the properties \u00b6 Now you must save the file. To do so, you need to: Hit CTRL+X (or VOLUME DOWN+X which is the same thing.) Press y on the keyboard to save changes Press ENTER to save the filename! Enabling the changes \u00b6 Termux won't directly load the save changes. You can use any of the following ways to enable these changes: Restart the application! (Easiest way) Run source ~/.termux/termux.properties to load the file (The linux way) Run termux-reload-settings (the offical way) All 3 of these work the same. If one doesn't for you, then use the other For the linux nerds You don't need to follow any of the above steps. We didn't put this in the beginning because spoon-feeding is against our policies. Sorry, lol Use this one command if you want it to happen: Example mkdir $HOME /.termux/ ; echo \"extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]\" >> $HOME /.termux/termux.properties ; termux-reload-properties ; Success The keyboard on the bottom should look something like this now! Well Done! Tightly Packed Keys If after doing all the above steps, the keys look too tightly packed to you then that's probably a bug. Just close the application with CTRL+D or Exit from the notification shade and restart it. This should hopefully fix it","title":"Extra Keys"},{"location":"termux/customisation/extra_keys/#understanding-keys-on-termux-and-shortcuts","text":"You might have noticed that the keyboard at the bottom of the screen has some pretty useful keys by default! These are ESC , TAB , CTRL , ALT , - , DOWN and UP . But you can always edit these if you want to! Use of keys like ALT , CTRL , ESC is necessary for working with a CLI terminal. Termux touch keyboards do not include one. For that purpose Termux uses the Volume down button to emulate the CTRL key. For example, pressing VOLUME DOWN+L on a touch keyboard sends the same input as pressing Ctrl+L on a hardware keyboard. The result of using CTRL in combination with a key depends on which program is used, but for many command line tools the following shortcuts works: CTRL+A \u2192 Move cursor to the beginning of line CTRL+C \u2192 Abort (send SIGINT to) current process CTRL+D \u2192 Logout of a terminal session CTRL+E \u2192 Move cursor to the end of line CTRL+K \u2192 Delete from cursor to the end of line CTRL+L \u2192 Clear the terminal CTRL+Z \u2192 Suspend (send SIGTSTP to) current process CTRL+ALT+C \u2192 Open new session (only work in Hacker's Keyboard) The Volume up key also serves as a special key to produce certain input: VOLUME UP+E \u2192 Escape key VOLUME UP+T \u2192 Tab key VOLUME UP+1 \u2192 F1 (and Volume Up+2 \u2192 F2, etc) VOLUME UP+0 \u2192 F10 VOLUME UP+B \u2192 Alt+B, back a word when using readline VOLUME UP+F \u2192 Alt+F, forward a word when using readline VOLUME UP+X \u2192 Alt+X VOLUME UP+W \u2192 Up arrow key VOLUME UP+A \u2192 Left arrow key VOLUME UP+S \u2192 Down arrow key VOLUME UP+D \u2192 Right arrow key VOLUME UP+L \u2192 | (the pipe character) VOLUME UP+H \u2192 ~ (the tilde character) VOLUME UP+U \u2192 _ (underscore) VOLUME UP+P \u2192 Page Up VOLUME UP+N \u2192 Page Down VOLUME UP+. \u2192 Ctrl+ (SIGQUIT) VOLUME UP+V \u2192 Show the volume control VOLUME UP+Q \u2192 Show extra keys view VOLUME UP+K \u2192 Another variant to toggle extra keys view","title":"Understanding Keys on Termux and Shortcuts"},{"location":"termux/customisation/extra_keys/#adding-extra-keys","text":"Termux also has an extra keys view which allows you to extend your current keyboard. To enable the extra keys view you have to long tap on the keyboard button in the left drawer menu. (Swipe from left \u2192 right to open the drawer) Abstract You can also press VOLUME UP+Q or VOLUME UP+K . Note From Termux v0.66, Extra keys are enabled by default. You can remove these by long pressing on the keyboard again Open the termux.properties file: Example $ nano ~/.termux/termux.properties Directory .../home/.termux doesn't exist If you get the above error, then that means that the .termux directory doesn't exist. Try making it, before doing this, with mkdir $HOME /.termux/ Now we will start by adding two rows of some really useful keys(default keys until v0.66) extra-keys = [[ 'ESC' , '/' , '-' , 'HOME' , 'UP' , 'END' , 'PGUP' ] , [ 'TAB' , 'CTRL' , 'ALT' , 'LEFT' , 'DOWN' , 'RIGHT' , 'PGDN' ]] extra-keys is the key and the value is a list(array) of lists with the extra keys! The extra-keys definition itself can also be spread over multiple lines, if desired, by \"backslash-escaping\" the line feed at the end of each line, thus: extra-keys = [ \\ [ 'ESC' , '/' , '-' , 'HOME' , 'UP' , 'END' , 'PGUP' ] , \\ [ 'TAB' , 'CTRL' , 'ALT' , 'LEFT' , 'DOWN' , 'RIGHT' , 'PGDN' ] \\ ] Success It should look something like this: Each key \"entry\" can be either a string (such as '|' , '/' or '=' ) or one of the values listed below. These values are defined in ExtraKeysView.java, and the list of values (not including possible synonyms) is: CTRL (\"special key\") ALT (\"special key\") FN (\"special key\") ESC (\"special key\") TAB HOME END PGUP PGDN INS DEL BKSP UP LEFT RIGHT DOWN ENTER BACKSLASH QUOTE APOSTROPHE Bug Each of the four \"special keys\" listed above should only be listed at most ONCE in the extra-keys definition i.e. do NOT have more than one CTRL key. Having more than one instance of any \"special key\" will result in a bug whereby those keys do not function correctly.","title":"Adding extra keys"},{"location":"termux/customisation/extra_keys/#saving-the-properties","text":"Now you must save the file. To do so, you need to: Hit CTRL+X (or VOLUME DOWN+X which is the same thing.) Press y on the keyboard to save changes Press ENTER to save the filename!","title":"Saving the properties"},{"location":"termux/customisation/extra_keys/#enabling-the-changes","text":"Termux won't directly load the save changes. You can use any of the following ways to enable these changes: Restart the application! (Easiest way) Run source ~/.termux/termux.properties to load the file (The linux way) Run termux-reload-settings (the offical way) All 3 of these work the same. If one doesn't for you, then use the other For the linux nerds You don't need to follow any of the above steps. We didn't put this in the beginning because spoon-feeding is against our policies. Sorry, lol Use this one command if you want it to happen: Example mkdir $HOME /.termux/ ; echo \"extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]\" >> $HOME /.termux/termux.properties ; termux-reload-properties ; Success The keyboard on the bottom should look something like this now! Well Done! Tightly Packed Keys If after doing all the above steps, the keys look too tightly packed to you then that's probably a bug. Just close the application with CTRL+D or Exit from the notification shade and restart it. This should hopefully fix it","title":"Enabling the changes"}]}